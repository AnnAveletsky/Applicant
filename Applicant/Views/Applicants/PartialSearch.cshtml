@model ApplicantClassLibrary.SortSearch
@{
    if (Model.CountElementsInPage == 0)
    {
        Model.CountElementsInPage = 5;
    }
}
@using (Html.BeginForm("Index"))
{
    @Html.AntiForgeryToken()
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="form-group col-md-12">
            <div class="input-group">
                <span class="input-group-addon">Сортировать по</span>
                @Html.EnumDropDownListFor(model => model.PoleSort, htmlAttributes: new { @class = "form-control" })
                <span class="input-group-addon">Порядок</span>
                @Html.EnumDropDownListFor(model => model.OrderSort, htmlAttributes: new { @class = "form-control" })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="button"><i class="glyphicon glyphicon-sort"></i></button>
                </span>
            </div>
        </div>
        
        <div class="form-group  col-md-6">
            <div class="input-group">
                @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "form-control", @placeholder = "Search", @type = "text" } })
                <span class="input-group-btn">
                    <button class="btn btn-info" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                </span>
            </div>
        </div>
            
        <div class="form-group  col-md-6">
            <div class="input-group">
                <span class="input-group-addon">Записей на странице:</span>
                @Html.EditorFor(model => model.CountElementsInPage, new { htmlAttributes = new { @class = "form-control", @min = 1 } })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="button"><i class="glyphicon glyphicon-filter"></i></button>
                </span>
            </div>
        </div>
        </div>
}
