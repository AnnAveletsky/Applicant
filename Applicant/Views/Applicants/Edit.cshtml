@model ApplicantWeb.Models.Applicant

@{
    ViewBag.Title = @ApplicantWeb.App_LocalResources.Applicant.EditPersonalData;
}

<h2>@ApplicantWeb.App_LocalResources.Applicant.EditPersonalData</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicantId)
        <h3>@ApplicantWeb.App_LocalResources.Applicant.PersonalData</h3>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group ">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.BaseProfileJob, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BaseProfileJob, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.BaseProfileJob, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control short" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Birthday, new
           {
               htmlAttributes = new
               {
                   @class = "form-control short",
                   @Value = Model.Birthday.Year +
                       "-" + ((Model.Birthday.Month >= 10) ? Model.Birthday.Month + "" : ("0" + Model.Birthday.Month)) +
                       "-" + (Model.Birthday.Day >= 10 ? Model.Birthday.Day + "" : "0" + Model.Birthday.Day)
               }
           })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.TypeСooperation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.TypeСooperation, htmlAttributes: new { @class = "form-control short" })
                        @Html.ValidationMessageFor(model => model.TypeСooperation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.TypeEmployment, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.TypeEmployment, htmlAttributes: new { @class = "form-control short" })
                        @Html.ValidationMessageFor(model => model.TypeEmployment, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="input-group short">
                            <div class="input-group-btn">
                                <select id="TypeSalary" name="TypeSalary" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @if (Model.TypeSalary == "В месяц")
                                    {
                                        <option selected>В месяц</option>
                                        <option>В час</option>
                                    }
                                    else
                                    {
                                        <option>В месяц</option>
                                        <option selected>В час</option>
                                    }

                                </select>
                            </div>
                            <input type="text" id="Salary" value="@Model.Salary" name="Salary" class="form-control" aria-label="...">
                            <div class="input-group-btn">
                                <select class="btn btn-default dropdown-toggle" id="TypeMoney" name="TypeMoney">
                                    @if (Model.TypeSalary == "₽")
                                    {
                                        <option selected>₽</option>
                                        <option>$</option>
                                    }
                                    else
                                    {
                                        <option>₽</option>
                                        <option selected>$</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div><!-- /input-group -->
                </div>
                <div class="col-md-12">
                    @Html.ValidationMessageFor(model => model.TypeSalary, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.TypeMoney, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <h3>@ApplicantWeb.App_LocalResources.Applicant.Contacts</h3>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Repository, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Repository, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Repository, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Linkedin, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Linkedin, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Linkedin, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.VKontakte, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VKontakte, new { htmlAttributes = new { @class = "form-control short" } })
                        @Html.ValidationMessageFor(model => model.VKontakte, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control noresizehorizontal short" } })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success btn-md" value="Save">
                            <i class="glyphicon glyphicon-ok"></i>
                            @ApplicantWeb.App_LocalResources.Applicant.Save
                        </button>
                        <a class="btn btn-default btn-md" href='@Url.Action("Details",new{id=Model.ApplicantId}).ToString()'>
                            <i class="glyphicon glyphicon-share-alt"></i>
                            @ApplicantWeb.App_LocalResources.Applicant.Back
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

